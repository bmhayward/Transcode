<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>419</string>
	<key>AMApplicationVersion</key>
	<string>2.6</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/usr/bin/env bash
# Copyright (c) 2016 Brent Hayward

# set -xv; exec 1&gt;&gt;/private/tmp/transcodeServiceTraceLog 2&gt;&amp;1

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin export PATH


#----------------------------------------------------------FUNCTIONS----------------------------------------------------------------

function define_Constants () {
	local versStamp="Version 1.1.7, 04-22-2016"
	
	readonly libDir="${HOME}/Library"
	readonly workDir=$(aliasPath "${libDir}/Application Support/Transcode/Transcode alias")					# get the path to the Transcode folder
	
	readonly prefPath="${workDir}/Prefs.txt"
	readonly appScriptsPath="${libDir}/Application Scripts/com.videotranscode.transcode"
	
	readonly sh_readPrefs="${appScriptsPath}/_readPrefs.sh"
	readonly sh_writePrefs="${appScriptsPath}/_writePrefs.sh"
}

function get_Prefs () {
																				# create the default preferences file if it does not exist	
	if [ ! -e "${prefPath}" ]; then
	   . "${sh_writePrefs}" "${prefPath}"
	fi
	
	. "${sh_readPrefs}" "${prefPath}"											# read in the preferences from Prefs.txt
}

function extract_MatchVal () {
	# ${1}: filename w/wo file extension
	# Returns: matched value
	
	local fileTitle="${1}"
	local matchVal=""
																	# TV Show
	if [[ "${fileTitle}" =~ ([[:space:]]-[[:space:]]*([Ss][0-9]+[Ee][0-9]+)*-[e][0-9]+) ]]; then
		matchVal=${BASH_REMATCH[1]}				 				# get the matched text from the string SXXEYYEZZ
	elif [[ "${fileTitle}" =~ ([[:space:]]-[[:space:]]*([Ss][0-9]+[Ee][0-9]+)) ]]; then
		matchVal=${BASH_REMATCH[1]}								# get the matched text from the string SXXEYY
	elif [[ "${fileTitle}" =~ ([[:space:]]*[(][0-9]+[)]) ]]; then
		matchVal=${BASH_REMATCH[1]}		 						# get the matched text from the string (YEAR)
	elif [[ "${fileTitle}" =~ (Featurettes) ]] || [[ "${fileTitle}" =~ (Behind The Scenes) ]] || [[ "${fileTitle}" =~ (Deleted Scenes) ]] || [[ "${fileTitle}" =~ (Interviews) ]] || [[ "${fileTitle}" =~ (Scenes) ]] || [[ "${fileTitle}" =~ (Shorts) ]] || [[ "${fileTitle}" =~  (Trailers) ]]; then
		matchVal=${BASH_REMATCH[1]}		 						# get the matched text from the string extras
	fi
	
	echo "${matchVal}"
}

function set_MetadataTag () {
	# ${1}: file path

	local metaVal="${1##*/}"
	local matchVal=$(extract_MatchVal "${metaVal}")													# get the string to strip out

	metaVal=${metaVal%${matchVal}*}																	# remove the matched value from the metaVal

	atomicparsley "${1}" --overWrite --title "${metaVal}"  2&gt;&amp;1 | logger -t transcode.service		# set the metadata tag
}

function set_FinderTag () {
	# ${1}: path to the file
	
	echo 2&gt;&amp;1 | logger -t transcode.service
	echo " Updating Finder tags..." 2&gt;&amp;1 | logger -t transcode.service
	
	local applyTag=""
	local titleName=$(extract_MatchVal "${1}")						# get the string to strip out

	if [[ "${titleName}" =~ ([Ss][0][0][Ee][0-9]+) ]]; then		
		applyTag=${extrasTag}
	elif [[ "${titleName}" =~ ([Ss][0-9]+[Ee][0-9]+) ]]; then
		applyTag=${tvTag}
	elif [[ "${titleName}" == "Featurettes" ]] || [[ "${titleName}" == "Behind The Scenes" ]] || [[ "${titleName}" == "Deleted Scenes" ]] || [[ "${titleName}" == "Interviews" ]] || [[ "${titleName}" == "Scenes" ]] || [[ "${titleName}" == "Shorts" ]] || [[ "${titleName}" ==  "Trailers" ]]; then
		applyTag=${extrasTag}
	elif [[ "${1##*.}" == "mkv" ]]; then
		applyTag=${convertedTag}
	else
		applyTag=${movieTag}
	fi
	
	tag --add "${applyTag}"	 "${1}"	 2&gt;&amp;1 | logger -t transcode.service								# set Finder tags	
}


#-------------------------------------------------------------MAIN-------------------------------------------------------------------

define_Constants
get_Prefs

for f in "${@}"; do
	searchPath="${f}" 									# get the path passed by Automator

	if [ -d "${searchPath}" ]; then
														# directory|directories, apply to each file
		cd "${searchPath}"
	
		find . -print0 | while IFS= read -r -d '' file
		do 
		   if [[ "${file##*/}" != "." &amp;&amp; "${file##*/}" != ".DS_Store" &amp;&amp; ! -d "${file}" ]]; then
				fileExt="${file##*.}"
														# only deal with .m4v, .mp4 or .mkv files
				if [[ "${fileExt}" = "m4v" || "${fileExt}" = "mp4" || "${fileExt}" = "mkv" ]]; then
					echo "" 2&gt;&amp;1 | logger -t transcode.service
					echo "${file##*/}" 2&gt;&amp;1 | logger -t transcode.service
					set_MetadataTag "${file}"
					set_FinderTag "${file}"
				fi
			fi
		done
	else
														# single file, apply
		fileExt="${searchPath##*.}"
														# only deal with .m4v, .mp4 or .mkv files
		if [[ "${fileExt}" = "m4v" || "${fileExt}" = "mp4" || "${fileExt}" = "mkv" ]]; then
			echo "" 2&gt;&amp;1 | logger -t transcode.service
			echo "${searchPath##*/}" 2&gt;&amp;1 | logger -t transcode.service
			set_MetadataTag "${searchPath}"
			set_FinderTag "${searchPath}"
		fi
	fi

	echo "" 2&gt;&amp;1 | logger -t transcode.service
done

exit 0</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>409583EE-396D-40C2-9465-D93BEEE48567</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>B383A147-45C0-4777-8D50-25123F746BD8</string>
				<key>UUID</key>
				<string>65C910C4-A3D3-49CD-A9F0-F169160E6124</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>668.500000:253.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
